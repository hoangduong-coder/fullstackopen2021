{"version":3,"sources":["services/handleList.js","App.js","index.js"],"names":["Url","axios","get","then","response","data","obj","post","id","delete","put","Filter","kw","action","name","value","onChange","PersonForm","onSubmit","phone","onClick","type","Person","del","List","arr","handleDelete","map","Notification","message","className","App","useState","newName","setNewName","phoneNumber","setPhoneNumber","keyword","setKeyword","filter","setFilter","people","setPeople","notification","setNotification","useEffect","userService","initialUser","handleChange","event","target","length","notifyWith","mess","setTimeout","nameFilter","toLowerCase","includes","preventDefault","newUser","thisUser","find","window","confirm","copyUser","returnUser","catch","error","result","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08cc1532.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst Url = '/api/persons';\r\n\r\nconst getUser = () => {\r\n  const request = axios.get(Url);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst createUser = obj => {\r\n  const request = axios.post(Url, obj);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst deleteUser = id => {\r\n  const request = axios.delete(`${Url}/${id}`);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst updateUser = (id, obj) => {\r\n  const request = axios.put(`${Url}/${id}`, obj);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nexport default {getUser, createUser, deleteUser, updateUser};\r\n","import React, {useState, useEffect} from 'react';\nimport userService from './services/handleList';\nconst Filter = ({kw, action}) => {\n  return(\n    <div>\n      <p>Filter shown with </p>\n      <input name=\"keyword\" value={kw} onChange={action}/>\n    </div>\n  )\n}\nconst PersonForm = ({onSubmit, name, phone, action}) => {\n  return(\n    <form onClick={onSubmit}>\n      <div>\n        <p>Name: </p>\n        <input name=\"name\" value={name} onChange={action}/>\n      </div>\n      <div>\n        <p>Phone: </p>\n        <input name=\"phone\" value={phone} onChange={action} />\n      </div>\n      <button type=\"submit\">Add</button>\n    </form>\n  )\n}\nconst Person = ({name, phone, del}) => {\n  return(\n    <div>\n      <p>{name}, {phone}</p>\n      <button onClick={del}>Delete</button>\n    </div>\n  )\n}\nconst List = ({arr, handleDelete}) => {\n  return(\n    <div>\n      {\n        arr.map(obj => \n          <Person name={obj.name} key={obj.id} phone={obj.phone} del={() => handleDelete(obj.id)}/>\n        )\n      }\n    </div>\n  )\n} \nconst Notification = ({obj}) => {\n  if(obj.message === null) {\n    return null\n  }\n  return(\n    <div className={obj.type}>\n      {obj.message}\n    </div>\n  )\n}\nconst App = () => {\n  const [newName, setNewName] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [keyword, setKeyword] = useState(\"\");\n  const [filter, setFilter] = useState(false);\n  const [people, setPeople] = useState([]);\n  const [notification, setNotification] = useState({});\n\n  useEffect(() => {\n    userService\n    .getUser()\n    .then(initialUser => setPeople(initialUser));\n  }, []);\n\n  const handleChange = (event) => {\n    switch (event.target.name) {\n      case \"name\":\n        setNewName(event.target.value)\n        break\n      case \"phone\":\n        setPhoneNumber(event.target.value)\n        break\n      case \"keyword\":\n        setKeyword(event.target.value)\n        keyword.length !== null ? setFilter(true) : setFilter(false);\n        break\n      default:\n        break;\n    }\n  }\n\n  const notifyWith = (mess, type) => {\n    setNotification({\n      message: mess, \n      type: type})\n    setTimeout(() => {\n      setNotification({});\n    }, 5000);\n  }\n\n  const addName = event => {\n    event.preventDefault();\n    const newUser = {\n      name: newName,\n      phone: phoneNumber,\n    };\n    if(newName !== \"\" && phoneNumber !== \"\") {\n      const thisUser = people.find(obj => obj.name === newUser.name);\n      if(thisUser) {\n        const okChange = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`);\n        if(okChange) {\n          const copyUser = {...thisUser, phone: phoneNumber};\n          userService\n          .updateUser(thisUser.id, copyUser).then(returnUser => {\n            setPeople(people.map(obj => (obj.id !== copyUser.id ? obj : returnUser)))\n            notifyWith(`${newName}'s phone number have been updated to the server`, \"notification\");\n          })\n          .catch(error => {\n            notifyWith(`${newName} was already removed from server`, 'error');\n            setPeople(people.filter(obj => obj.id !== thisUser.id))\n          });\n        }\n        setNewName('');\n        setPhoneNumber('');\n      } else {\n        userService\n        .createUser(newUser)\n        .then(result => {\n          setPeople(people.concat(result));\n          notifyWith(`${newName} have been added to the server`, 'notification')\n          setNewName('');\n          setPhoneNumber('');\n        })\n        .catch(error => {\n          notifyWith(error.response.data.error, 'error')\n        });\n      }\n    } else {\n      return;    \n    }\n  }\n\n  const nameFilter = filter\n  ? people.filter(obj => obj.name.toLowerCase().includes(keyword.toLowerCase()))\n  : people;\n\n  const deleteName = id => {\n    const thisUser = people.find(obj => obj.id === id);\n    if(window.confirm(`Delete ${thisUser.name}?`)){\n      userService\n      .deleteUser(id)\n      .then(() => {\n        setPeople(people.filter(obj => obj.id !== id))\n        notifyWith(`Delete ${newName} successfully!`, 'notification');\n      })\n      .catch(() => {\n        setPeople(people.filter(obj => obj.id !== id))\n        notifyWith(`${thisUser.name} have been removed`, 'error');\n      })\n    }\n  };\n\n  return(\n    <div>\n      <Notification obj={notification}/>\n      <h2>Phonebook</h2>\n      <Filter kw={keyword} action={handleChange}/>\n      <h3>New person</h3>\n      <PersonForm name={newName} phone={phoneNumber} action={handleChange} onSubmit={addName}/>\n      <h3>Numbers</h3>\n      <List arr={nameFilter} handleDelete={deleteName}/>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}